<?php
// $Id$

/*
 *******************************************************************************
 * @file listmixer.module
 * Main module file for List Mixer module
 *******************************************************************************
 */
 
/**
 * Imagecache preset storage constant for user-defined presets in the DB.
 */
define('LISTMIXER_STORAGE_NORMAL', 0);

/**
 * Imagecache preset storage constant for module-defined presets in code.
 */
define('LISTMIXER_STORAGE_DEFAULT', 1);

/**
 * Imagecache preset storage constant for user-defined presets that override
 * module-defined presets.
 */
define('LISTMIXER_STORAGE_OVERRIDE', 2); 

/**
 * Includes
 */ 
include('includes/listmixer.presets.inc'); 
include('includes/listmixer.hooks.inc'); 
include('includes/listmixer.behaviors.inc'); 
include('includes/listmixer.utilities.inc');

/**
 * Implementation of hook_help().
 */
function listmixer_help($section) {
  switch ($section) {
    // TODO: Should this be one line or in lines of 80 characters?
    case 'admin/help#listmixer':
    return '<p>'. t('List Mixer helps users of a Drupal website to manage 
    methods of creating and updating lists of content. List Mixer works with 
    fields, views and taxonomy. 
    A site administrator can set up any number of interaction presets. The 
    interaction presets allow associations of content types, fields, views,
    taxonomy terms, block ids to be connected up to a variety of ajax-tools 
    and data storage methods.') .'</p>';
  }
}

/**
 * Implementation of hook_perm().
 */
function listmixer_perm() {
  $perms = array('access list mixer');
  foreach (listmixer_presets() as $preset) {
    $perms[] =  'view listmixer '. $preset['preset_name'];
  }
  return $perms;
}

/**
 * Clear imagecache presets cache on admin/build/modules form.
 */
function listmixer_form_system_modules_alter(&$form, $form_state) {
  listmixer_presets(TRUE);
}

/**
 * Implementation of hook_menu().
 */
function listmixer_menu() { 
  $items = array();
  // Code extract configuration pages
  $items['admin/settings/listmixer'] = array(
    'title' => 'List Mixer Settings',
    'description' => 'Configure List Mixer',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('listmixer_admin_settings'),
    'access arguments' => array('administer list mixer'),
    'file' => 'includes/listmixer.admin.inc',
  );
  return $items;
}
/**
 * List Mixer, init 
 *
 * Add javascript and CSS to every page on a Drupal site.
 * Add an array of settings for all interactions that should
 * be listened for on each page.
 * After settings are set, run through page and add javascript
 * based on specifications in settings, and if possible, only
 * if an interaction should be used on a given page.
 * This might have to happen in a preprocessor function, which
 * ideally would execute after the module had been initialized.
 *
 */
function listmixer_init() {
  // Add the javascript.
  $path = drupal_get_path('module', 'listmixer');
  // Add main javascript file.
  drupal_add_js($path .'/listmixer.js', 'footer');

  // Add custom style sheet.
  drupal_add_css($path .'/listmixer.css');

  // Add all interaction presets and callback settings to every Drupal page.
  $presets = listmixer_presets();
    
  // @TODO: listmixer.js will look for presence of the block_id (or whatever it is supposed to, later)
  // @TODO: presets setup (in listmixer.js) if a block id is found, then the rest of the necessary data is searched for (nid)
  // @TODO: ideally, if stuff is found, then the javascript file will load some includes. 
  // @TODO: presets data variable created (here)
  // @TODO: activate set up (buttons to trigger interactions added)
  // @TODO: interact set up (buttons/methods to select data)
  // @TODO: $presets will need a behaviors
  // @TODO: foreach behavior load appropriate javascript
  // @TODO: push set up (functions that say what to do if data is collected) (prepare data to be passed to callback function)
  // @TODO: submit setup (handles executing callback and redirect/refresh)
  
  // Build array of settings for Drupal.settings javascript
  $settings = array();
  foreach ($presets as $preset) {
    $settings[$preset['preset_name']] = $preset;
  }
  drupal_add_js(array('listmixer' => $settings), 'setting');
}


// Theming functions

/**
 * Implementation of hook_theme().
 */
function listmixer_theme() {
  return array(
    'listmixer'  => array(
      'arguments' => array(
        'namespace' => NULL,
        'path' => NULL,
        'alt' => NULL,
        'title' => NULL,
    )),
  );
}

/**
 * Code Extract theme function.
 */
function theme_listmixer() {
}