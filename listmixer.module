<?php
// $Id$

/*
 *******************************************************************************
 * @file listmixer.module
 * Main module file for List Mixer module
 *******************************************************************************
 */
 
/**
 * Imagecache preset storage constant for user-defined presets in the DB.
 */
define('LISTMIXER_STORAGE_NORMAL', 0);

/**
 * Imagecache preset storage constant for module-defined presets in code.
 */
define('LISTMIXER_STORAGE_DEFAULT', 1);

/**
 * Imagecache preset storage constant for user-defined presets that override
 * module-defined presets.
 */
define('LISTMIXER_STORAGE_OVERRIDE', 2); 

/**
 * Include the API functions (these are only sort of API functions at the moment)
 */
include('includes/listmixer.api.inc'); 


/**
 * Implementation of hook_help().
 */
function listmixer_help($section) {
  switch ($section) {
    // TODO: Should this be one line or in lines of 80 characters?
    case 'admin/help#listmixer':
    return '<p>'. t('List Mixer helps users of a Drupal website to manage 
    methods of creating and updating lists of content. List Mixer works with 
    fields, views and taxonomy. 
    A site administrator can set up any number of interaction presets. The 
    interaction presets allow associations of content types, fields, views,
    taxonomy terms, block ids to be connected up to a variety of ajax-tools 
    and data storage methods.') .'</p>';
  }
}

/**
 * Implementation of hook_perm().
 */
function listmixer_perm() {
  return array('access list mixer');
}

/**
 * Implementation of hook_menu().
 */
function listmixer_menu() { 
  $items = array();
  // Code extract configuration pages
  $items['admin/settings/listmixer'] = array(
    'title' => 'List Mixer Settings',
    'description' => 'Configure List Mixer',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('listmixer_admin_settings'),
    'access arguments' => array('administer list mixer'),
    'file' => 'includes/listmixer.admin.inc',
  );

  // TODO: Add menus and callbacks for any storage functions
  
  // TODO: Create callback that handles everything
  
  return $items;
}
/**
 * List Mixer, init 
 *
 */
function listmixer_init() {
  // Add the javascript.
  $path = drupal_get_path('module', 'listmixer');
 /* 
 // Set Drupal javascript value to the block ID stored in settings.
  // TODO: move these to interaction presets and load variables from the settings for 
  // the presets into the right format for the ajax functions
  drupal_add_js( array(
    'drag_list' => array(
      'dragListBlockId' => variable_get('drag_list_allowed_block', 'block-views-drag_list_blocks-block_1'), 
      ),
    ),
   'setting');
  // Add main javascript file.
  drupal_add_js($path .'/drag_list.js');
  // Add custom style sheet.
  drupal_add_css($path .'/drag_list.css');*/
}


// Theming functions

/**
 * Implementation of hook_theme().
 */
function listmixer_theme() {
  return array(
    'listmixer' => array('arguments' => array()),
  );
}

/**
 * Code Extract theme function.
 */
function theme_listmixer() {
}